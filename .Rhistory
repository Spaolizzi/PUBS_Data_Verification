PAI[i] <-  dplyr::recode(as.vector(PAI[i]), "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3")
}
as.vector(PAI[i])
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3")
View(PAI)
i
for (i in 1:length(colnames(PAI))){
col <- colnames(PAI)[i]
col <- PAI[col]
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3")
}
for (i in 1:length(colnames(PAI))){
col <- colnames(PAI)[i]
col <- PAI[col]
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = i)
}
for (i in 1:length(colnames(PAI))){
col <- colnames(PAI)[i]
col <- PAI[col]
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
}
for (i in 1:length(colnames(PAI))){
col <- PAI[i]
PAI[i] <-  dplyr::recode(PAI[i], "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
}
for (i in 1:length(colnames(PAI))){
col <- PAI[i]
PAI[i] <-  dplyr::recode(col, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
}
dplyr::recode(PAI, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
col <- as.vector(PAI[i])
col <- c(PAI[i])
View(col)
for (i in 1:ncol(PAI))){
for (i in 1:ncol(PAI)){
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
}
for (i in 1:ncol(PAI)){
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = i)
}
for (i in 1:ncol(PAI)){
i
)
for (i in 1:ncol(PAI)){
print(i))
for (i in 1:ncol(PAI)){
print(i)}
for (i in 1:ncol(PAI)){
PAI[i] <-  dplyr::recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = i)
}
for (i in 1:ncol(PAI)){
PAI[i] <-  dplyr::recode(PAI[i], "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i])
}
for (i in 1:ncol(PAI)){
PAI[i,] <-  dplyr::recode(PAI[i,], "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i,])
}
dplyr::recode(PAI[i,], "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[i,])
PAI[i,]
if (options == "by_questionnaire"){
PID <- qualtrics %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
measures_list
}
summary_df <- as.data.frame(summary(measures_list))
summary_df <- summary_df[1:6, c(1,3)]
summary_df$Expected_Vals <- expected_vals
summary_df <- rename(summary_df, "Questionnaire" = "Var1")
summary_df %>%
mutate(Match = if(Freq == Expected_Vals){
TRUE
}else{
FALSE
}
)
for (i in 1:ncol(PAI)){
PAI[,i] <-  dplyr::recode(PAI[,i], "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = PAI[,i])
}
PAI[,i]
class((PAI[,i]))
i
for (i in 1:ncol(PAI)){
PAI <-  mutate(across(1:ncol(PAI), ~ recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = (PAI[,i]))))
}
for (i in 1:ncol(PAI)){
PAI <-  mutate(recode(i, "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = (PAI[,i])),
across(1:ncol(PAI)))
}
for (i in 1:ncol(PAI)){
PAI <-  mutate(across(1:ncol(PAI), ~ recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = (PAI[,i]))))
}
PAI <-  mutate(across(1:ncol(PAI), ~ recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3"
)))
mutate(across(1:ncol(PAI), ~ recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3"
)))
df2 <- PAI %>%
mutate(across(
starts_with("PAI"),
~recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3")
))
View(df2)
PAI <- PAI %>%
mutate(across(
starts_with("PAI"),
~recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = .)
))
View(PAI)
View(qualtrics)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
options(knitr.duplicate.label = "allow")
##Load Packages and source scripts
pacman::p_load(tidyverse, readr, janitor, ggplot2,wesanderson, cowplot, flextable, plotly)
setwd("~/github_repos/PUBS_Data_Verification/") ##Set this to be whereever you're storing the data
qualtrics <- read_csv("sample_data/Qualtrics_Data_augpilot.csv")
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") %>% rename(Q_242)
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") %>% #rename()
# qualtrics <- qualtrics %>% select(c(1:230, 779)) #rough way of doing this but it works
options <- "by_questionnaire"
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") #%>%rename()
# qualtrics <- qualtrics %>% select(c(1:230, 779)) #rough way of doing this but it works
options <- "by_questionnaire"
columns <- colnames(qualtrics)
global_vars <- (c("RandomID", "Eth", "gen", "age")) #copy names of all demographic variables in here.
if (options == "by_questionnaire"){
PID <- qualtrics %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
measures_list
}
View(PAI)
PAI <- PAI %>%
mutate(across(
starts_with("PAI"),
~recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = .)
))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
options(knitr.duplicate.label = "allow")
##Load Packages and source scripts
pacman::p_load(tidyverse, readr, janitor, ggplot2,wesanderson, cowplot, flextable, plotly)
setwd("~/github_repos/PUBS_Data_Verification/") ##Set this to be whereever you're storing the data
qualtrics <- read_csv("sample_data/Qualtrics_Data_augpilot.csv")
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") %>% dplyer::rename() ##for age
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") %>% #dplyr::rename() ##for age
subjects <- unique(qualtrics$RandomID)
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") #%>% dplyr::rename() ##for age
subjects <- unique(qualtrics$RandomID)
# qualtrics <- qualtrics %>% select(c(1:230, 779)) #rough way of doing this but it works
options <- "by_questionnaire"
columns <- colnames(qualtrics)
global_vars <- (c("RandomID", "Eth", "gen", "age")) #copy names of all demographic variables in here.
options == by_subject
options = "by_subject"
for (i in 1:length(subjects)){
PID <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(subject == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i],(names(qualtrics) %in% global_vars)]
else if (options == "by_subject"){
if (options == "by_subject"){
for (i in 1:length(subjects)){
PID <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(subject == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(subject == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
measures_list
}
}
if (options == "by_subject"){
for (i in 1:length(subjects)){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
measures_list
}
}
subjects
i
if (options == "by_subject"){
for (i in subjects){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
measures_list
}
}
View(PAI)
if (options == "by_subject"){
for (i in subjects){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
tmp_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(tmp_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
subj_list[[i]] <- tmp_list
}
}
if (options == "by_subject"){
subj_list <- list()
for (i in subjects){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
tmp_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(tmp_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
subj_list[[i]] <- tmp_list
}
}
View(subj_list)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
options(knitr.duplicate.label = "allow")
##Load Packages and source scripts
pacman::p_load(tidyverse, readr, janitor, ggplot2,wesanderson, cowplot, flextable, plotly)
setwd("~/github_repos/PUBS_Data_Verification/") ##Set this to be whereever you're storing the data
qualtrics <- read_csv("sample_data/Qualtrics_Data_augpilot.csv")
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") #%>% dplyr::rename() ##for age
subjects <- unique(qualtrics$RandomID)
# qualtrics <- qualtrics %>% select(c(1:230, 779)) #rough way of doing this but it works
options <- "by_questionnaire"
columns <- colnames(qualtrics)
global_vars <- (c("RandomID", "Eth", "gen", "age")) #copy names of all demographic variables in here.
if (options == "by_questionnaire"){
PID <- qualtrics %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
summary_df <- as.data.frame(summary(measures_list))
} else if (options == "by_subject"){
subj_list <- list()
for (i in subjects){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
tmp_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(tmp_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
subj_list[[i]] <- tmp_list
summary_df <- as.data.frame(summary(subj_list))
}
}
summary_df <- summary_df[1:6, c(1,3)]
summary_df$Expected_Vals <- expected_vals
summary_df <- rename(summary_df, "Questionnaire" = "Var1")
summary_df %>%
mutate(Match = if(Freq == Expected_Vals){
TRUE
}else{
FALSE
}
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
options(knitr.duplicate.label = "allow")
##Load Packages and source scripts
pacman::p_load(tidyverse, readr, janitor, ggplot2,wesanderson, cowplot, flextable, plotly)
setwd("~/github_repos/PUBS_Data_Verification/") ##Set this to be whereever you're storing the data
qualtrics <- read_csv("sample_data/Qualtrics_Data_augpilot.csv")
qualtrics <- qualtrics %>% dplyr::filter(!StartDate < "2021-08-30") %>% dplyr::filter(Progress == "100") #%>% dplyr::rename() ##for age
subjects <- unique(qualtrics$RandomID)
# qualtrics <- qualtrics %>% select(c(1:230, 779)) #rough way of doing this but it works
options <- "by_subject"
columns <- colnames(qualtrics)
global_vars <- (c("RandomID", "Eth", "gen", "age")) #copy names of all demographic variables in here.
if (options == "by_questionnaire"){
PID <- qualtrics %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[,(names(qualtrics) %in% global_vars)]
measures_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(measures_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
summary_df <- as.data.frame(summary(measures_list))
} else if (options == "by_subject"){
subj_list <- list()
for (i in subjects){
PID <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PID"))
PSWQ <- qualtrics %>% filter(RandomID == i) %>%  dplyr::select(contains("PSWQ"))
PAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("PAI"))
BFAS <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("BFAS"))
STAI <- qualtrics %>% filter(RandomID == i) %>% dplyr::select(contains("STAI"))
global_variables <- qualtrics[i,(names(qualtrics) %in% global_vars)]
tmp_list <- list(PID, PSWQ, PAI, BFAS, STAI, global_variables)
expected_vals <- c(109, 16, 24, 20, 40, 3) #PLEASE UPDATE THIS VECTOR WITH YOUR EXPECTED COUNT
names(tmp_list) <- c("PID", "PSWQ", "PAI", "BFAS", "STAI", "GLOBAL")
subj_list[[i]] <- tmp_list
summary_df <- as.data.frame(summary(subj_list))
}
}
summary_df <- summary_df[1:6, c(1,3)]
summary_df$Expected_Vals <- expected_vals
summary_df <- rename(summary_df, "Questionnaire" = "Var1")
summary_df %>%
mutate(Match = if(Freq == Expected_Vals){
TRUE
}else{
FALSE
}
)
summary_df
summary_df <- as.data.frame(summary(subj_list))
summary_df
subj_list[[i]]
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with("7", "12", "14", "19", "20","24"),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
))
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with("7" | "12" | "14"|"19"|"20"|"24"),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
))
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with(c("7","12","14","19","20","24")),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
))
View(PAI)
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with(c("7","12","14","19","20","24")),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
))
%>%
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with(c("7","12","14","19","20","24")),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
)) %>%
mutate(across(
starts_with("PAI"),
~recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = .)
))
View(PAI)
PAI <- PAI %>%
mutate(across(
starts_with("PAI") & ends_with(c("7","12","14","19","20","24")),
~recode(., "False, not at all true" = "3",
"Slightly True" = "2" ,
"Mainly True" = "1",
"Very True" = "0",
.default = .)
)) %>%
mutate(across(
starts_with("PAI") & !ends_with(c("7","12","14","19","20","24")),
~recode(., "False, not at all true" = "0",
"Slightly True" = "1" ,
"Mainly True" = "2",
"Very True" = "3",
.default = .)
))
